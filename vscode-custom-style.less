@font-face {
  font-family: 'XcodeDigits';
  src: local('XcodeDigits Regular'), url('https://cdn.jsdelivr.net/gh/meewill/SF/Fonts/XcodeDigits-regular.ttf');
  unicode-range: U+0030-0039;
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

:root {
  --monospace-font: 'SF Mono', ui-monospace, monospace;
  --xcode: XcodeDigits;
  --compact: 'SF Compact Text', 'SF Pro Text', -apple-system, sans-serif;
  --compact-rounded: 'SF Compact Rounded', 'SF Pro Text', -apple-system, sans-serif;
  --pro-text: 'SF Pro Text', -apple-system, sans-serif;
  --pro: 'SF Pro', -apple-system, sans-serif;
  --font-family: var(--pro-text);
}

* {
  font-feature-settings: 'cv01', 'cv02', 'cv03', 'ss04' 0; // -webkit-font-smoothing: antialiased;
  // -moz-osx-font-smoothing: grayscale;
}

html {
  -webkit-font-smoothing: antialiased !important;
}

.line-numbers {
  -webkit-font-smoothing: initial !important;
}

.sticky-line-number,
.overlayWidgets [widgetid="editor.contrib.stickyScrollWidget"] [style*="--vscode-editorStickyScroll"]:first-of-type,
#status\.editor\.selection a,
.marker-line,
.monaco-editor .margin-view-overlays,
.editor-container .margin-view-overlays {
  font-family: var(--xcode), var(--compact) !important;
}

.pane-body .detected-link {
  font-family: var(--xcode), var(--monospace-font) !important;
}

.notification-toast-container [aria-label='Your Code installation appears to be corrupt. Please reinstall.\, notification'] {
  display: none !important;
}

.notification-toast.notification-fade-in-done:has([aria-label='Your Code installation appears to be corrupt. Please reinstall.\, notification']) {
  box-shadow: none !important;
}

.bb svg,
.mac {
  font-family: var(--compact) !important;
}

.sticky-widget,
.editor-scrollable {
  // -webkit-font-smoothing: antialiased !important;
  // -webkit-font-smoothing: auto !important;
  span {
    font-weight: 500;
    //letter-spacing: 0.015rem !important;

    .mtkb {
      -webkit-font-smoothing: initial !important;
      font-weight: 800;
    }
  }
}

.monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab:hover:not(.active) {
  outline: 1px dashed;
  outline-offset: -5px;
}

// .monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab.active,
// .monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab.active:hover {
// outline: 1px solid;
// outline-offset: -5px;
// }
.monaco-list .monaco-list-row:hover {
  outline: 1px dashed #f38518;
  outline-offset: -1px;
}

.monaco-workbench .part.editor > .content .editor-group-container > .title {
  .tabs-container > .tab .tab-label,
  .title-label {
    order: 3;
  }

  .tabs-container > .tab {
    padding-left: 0;
    padding-right: 10px;

    > .tab-actions {
      order: 2;

      .actions-container {
        justify-content: flex-end;
        display: flex;
      }
    }
  }

  .tabs-container > .tab.sizing-fit {
    width: initial;
  }
}

.monaco-workbench .part.editor > .content .editor-group-container > .title .tabs-container > .tab > .tab-actions > .monaco-action-bar {
  width: 27px;
}

.open-editors .monaco-list .monaco-list-row {
  padding-left: 14px;
}

div.scm-editor-placeholder {
  font-family: var(--compact) !important;
}

.timeline-timestamp {
  font-family: var(--compact-rounded) !important;
}

.load-fonts(@monoFamilies,
        @tarMo,
        @monoWeights,
        @allUnicode);
.load-fonts(@textFamilies, @tarPT, @allWeights, @generalUnicode, true);
.load-stretch-fonts(@textFamilies, @tarCd, @allWeights, @generalUnicode, true);

@textFamilies: 'SF Pro', 'Arial', 'Helvetica Neue', 'Helvetica';

@monoFamilies: 'SF Mono',
'SFMono-Regular',
'ui-monospace';

@repo: 'https://cdn.jsdelivr.net/gh/meewill/SF';

@styles: {
  normal: '';
  italic: 'Italic';
}

@thinWeights: {
  Thin: 200;
}

@usualWeights: {
  Light: 300;
  Regular: 400;
  Medium: 500;
  Semibold: 600;
  Bold: 700;
}

@boldWeights: {
  Semibold: 600;
  Bold: 700;
}

@monoWeights: {
  Thin: 200;
  Light: 300;
  Medium: 400;
  Medium: 500;
  Semibold: 600;
  Bold: 700;
  Heavy: 800;
}

@allWeights: {
  Thin: 200;
  Light: 300;
  Regular: 400;
  Medium: 500;
  Semibold: 600;
  Bold: 700;
  Heavy: 800;
  Black: 900;
}

@tarPT: {
  nam: 'SF Pro Text';
  dir: '/Fonts/SF-Pro-Text-';
  ext: 'woff2';
}

@tarMo: {
  nam: 'SF Mono';
  dir: '/Fonts/SF-Mono-';
  ext: 'woff2';
}

@tarCM: {
  nam: 'SF Compact Text';
  dir: '/Fonts/SF-Compact-Text-';
  ext: 'woff2';
}

@tarCd: {
  nam: 'SF Pro';
  dir: '/Fonts/SF-Pro';
  ext: 'woff2';
}

@formats: {
  @ttf: TrueType;
  @otf: OpenType;
  @woff: woff;
  @woff2: woff2;
}

.load-fonts(@families,
@tar,
@weights,
@unicode,
@local: false) {
  each(@families,
  .(@family, @k1, @i1) {
    each(@weights, .(@numeric, @weight-key, @i) {
      each(@styles, .(@style-val, @style, @i2) {
        // @keyword: extract(@weight, 1);
        // @numeric: extract(@weight, 2);
        @font-face {
          font-family: @family;
          .use-src(@family, @tar, @repo, @weight-key, @style-val, @numeric, @style, @local);
          unicode-range: @unicode;
          font-weight: @numeric;
          font-style: @style;
          font-display: swap;
        }
      })
    })
  })
}

.use-src(@family,
@tar,
@repo,
@weight-key,
@style-val,
@numeric,
@style,
@local:false) {
  @nam: @tar[nam];
  @dir: @tar[dir];
  @ext: @tar[ext];
  @format: @formats[@@ext];
  @italic: if(@style-val='',
  e(''),
  ' Italic');
  src: url('@{repo}@{dir}@{weight-key}@{style-val}.@{ext}') format('@{format}');
}

.load-local-fonts(@families,
@tar,
@weights,
@unicode,
@styles,
@local: false) {
  each(@families,
  .(@family,
  @k1,
  @i1) {
    @font-face {
      font-family: @family;
      src: local(@family);
      unicode-range: @unicode;
      font-display: swap;
    }
  })
}

.load-stretch-fonts(@families,
@tar,
@weights,
@unicode,
@local: false) {
  each(@families,
  .(@family,
  @k1,
  @i1) {
    each(@weights,
    .(@numeric,
    @weight-key,
    @i) {
      @font-face {
        font-family: @family;
        .use-stretch-src(@family,
                @tar,
                @repo,
                @weight-key,
                '',
                @numeric,
                '',
                @local);
        unicode-range: @unicode;
        font-weight: @numeric;
        font-stretch: condensed;
        font-display: swap;
      }
    })
  })
}

.use-stretch-src(@family,
@tar,
@repo,
@weight-key,
@style-val,
@numeric,
@style,
@local) {
  @nam: @tar[nam];
  @dir: @tar[dir];
  @ext: @tar[ext];
  @format: @formats[@@ext];
  src: if(@local,
  local('@{nam} Condensed @{weight-key}') e(','),) url('@{repo}@{dir}.@{ext}') format('@{format}');
}

@generalUnicode: e('U+0000-024F'),
e('U+02B0-052F'),
e('U+1DC0-20CF'),
e('U+2190-22FF'),
e('U+2460-24FF'),
e('U+25A0-25FF'),
e('U+2700-27FF'),
e('U+2900-2BFF'),
e('U+2C60-2C7F'),
e('U+2DE0-2E7F'),
e('U+3200-32FF'),
e('U+A640-A69F'),
e('U+A700-A7FF'),
e('U+E000-F8FF'),
e('U+FFF0-FFFF'),
e('U+F0000-10FFFF');
@plusUnicode: e('U+0250-02AF'),
e('U+1D00-1DBF'),
e('U+2190-22FF');
@allUnicode: @generalUnicode,
@plusUnicode;

@zhUnicode: e('U+4E00-9FFF'),
e('U+3400-4DBF'),
e('U+20000-2A6DF'),
e('U+F900-FAFF'),
e('U+2F800-2FA1F');
// e('U+2A700–2B73F, U+2B740–2B81F, U+2B820–2CEAF'),
